/**
* area_thesaurus
*
* Only use to set general thesaurus styles, not dynamic rows
* Specific CSS for ts_object must be written in ts_object.less
*
* Included from main.less file
*/
.area_thesaurus, .area_ontology {

	// section buttons container (export, new, print, etc.)
	>.buttons_container {
		display: flex;
		justify-content: space-between;

		button {
			margin-bottom: 0.25rem;
		}

		.show_all {
			white-space: nowrap;
		}

		// other_buttons_block
		>.other_buttons_block {
			display: flex;
			flex-wrap: wrap;
			justify-content: flex-end;
			width: 100%;
			padding: 0px;
		}

		// button show_other_buttons_button
		>.show_other_buttons_button {
			height: 2.2rem;
			transform: rotate(90deg);
			width: 1rem;
			padding: 12px;

			&:before {
				// content: 'Toggle buttons';
				content: attr(data-label);
				display: block;
				transform: rotate(-90deg);
				margin-top: 9rem;
				white-space: nowrap;
				padding-right: 1.1rem;
			}

			&.up {
				&:before {
					display: none;
				}
			}
			&:focus {
				outline: none;
			}
		}
	}

	>.search_container {
		position: relative;

		>.spinner {
			position: relative;
			margin: 20px;
		}
	}

	>.content_data {
		margin-top: 0.75rem;

		// ul .thesaurus_list_wrapper
		>.thesaurus_list_wrapper {
			width: 100%;
			height: 100%;
			padding: 0.25rem;
			margin: 0px;

			// li thesaurus_type_block
			>.thesaurus_type_block {
				padding: 0px;

				&.model {

					>.typology_name {
						background-color: @color_tag_indexation_normal;
						color: @color_white;

						&::before {
							content: " [M] ";
						}

						&:after {
							background-color: @color_white ;
						}
					}

					.term_text, mark {
						color: darken(@color_tag_indexation_normal, 18%) !important;
					}
				}

				// typology_name like 'Toponymy'
				>.typology_name {
					background-color: @color_grey_14;
					text-transform: uppercase;
					padding: 0.5em;
					margin-bottom: 0.25em;
					margin-top: 0.25em;
					font-size: 1em;
					line-height: 1em;
					color: @color_grey_5;
					cursor: pointer;

					&::active {
						background-color: @color_grey_9;
						color: @color_white;
					}

					&::after {
						right: 0.33rem;
					}

					// default opacity (collapsed)
					opacity: 0.5;
					// expanded case (visible)
					&.up {
						opacity: unset;
					}
				}

				// typology_container
				>.typology_container {
					padding: 0px;
					margin: 0px;

					// wrapper_placeholder. Is placeholder for ontology node wrapper
					// It will be replaced by the final real wrapper
					>.wrapper_placeholder {
						display: block;
						position: relative;
						width: 100%;
						margin: 0px;
						padding: 0px;
						// min-height: 1.71rem;
						height: 1.69rem;

						// loading message
						>.loading {
							display: flex;
							align-items: center;
							font-size: 1rem;
							min-width: 150px;
							margin: 0;
							padding: 0.35rem;
							padding-left: 1.6rem;
						}
					}
				}
			}
		}
	}//end .content_data

	.typology_hide {
		background: transparent url('../../themes/default/drop-down-arrow.png') no-repeat right center;
		background-size: 12px;
		background-position: right 10px center;
		opacity: 0.5;
	}

	// COMPONENT OVERWRITE CSS
	// ------------------------------------------------
		.reset_wrap {
			width: inherit;
			border: 0px;
			height: initial;
		}
		.reset_label {
			width: initial;
			padding-top: 5px;
		}
		.reset_content_data {
			display: inline-block;
			width: auto;
			min-width: 30%;
		}

		// Inside all ts objects
		.wrap_ts_object {
			>.wrap_component {
				.reset_wrap;
			}
			>.wrap_component label {
				.reset_label;
			}
			>.wrap_component .content_data {
				.reset_content_data;
			}
			>.wrap_component .content_data .button_add {
				top: 4px;
			}
			>.wrap_component .content_data .css_input_text {
				min-width: 260px;
			}
		}//end wrap_ts_object

	#submit_group {
		clear: both;
		padding-top: 10px;
	}

	#hierarchy_selector {
		margin-top: 5px;
	}

	span.label_hierarchy_selector {
		min-width: initial;
		padding: 7px;
		padding-right: 30px;
		padding-top: 10px;
	}

	.css_operator_select {
	    padding: 2px;
	    cursor: pointer;
	    clear: both;
	    width: 100%;
	    margin: 0px;
	}

	.css_wrap_max_rows {
		width: 12%;
	}

	.section_buttons_container {
		margin-right: 45px;
		padding-top: 3px;
	}

}//end .area_thesaurus
