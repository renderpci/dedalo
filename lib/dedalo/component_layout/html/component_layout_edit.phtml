<?php

	# VISUALIZADOR HTML


	# html_delimiter
	print component_common_draw::html_delimiter($component_name, $tipo, $parent, $label, 'in');

	print "<div class=\"wrap_component css_wrap_html_text wrap_component_{$tipo}\" id=\"{$id_wrapper}\" ";
	print "data-tipo=\"{$tipo}\" ";
	print "data-section_tipo=\"{$section_tipo}\" ";
	print "data-parent=\"{$parent}\" ";
	print "data-lang=\"{$lang}\" ";
	print "data-modo=\"{$modo}\" ";
	print "data-component_name=\"{$component_name}\" ";
	print "data-component_info='{$component_info}' >";

	# ETIQUETA (LABEL)
	$html_label = component_common_draw::draw_label($this);

	# CONTENIDO (INPUT)
	$html_content = '';
	switch(true) {

		case $permissions===0:	$html_content .= "";
					break;

		case $permissions===1:
					foreach ($dato as $key => $value) {
						$html_content .= " <span class=\"css_span_dato \">".htmlentities($value)."</span>";
					}
					break;

		case ($permissions>=2):

				if(SHOW_DEBUG) {
					#dump($dato, ' $dato');
				}
				$key  ='full';
					#dump($dato, " dato ".to_string());
				$value= (string)json_encode($dato,JSON_PRETTY_PRINT);

				$editor_id = $identificador_unico.'_'.$key;

				##
				# Text area
				$html_content .= "<textarea class=\"css_input_text_layout\" ";
				$html_content .= "onchange=\"component_layout.Save(this)\" ";
				$html_content .= "id=\"{$editor_id}\"  ";
				$html_content .= "name=\"{$input_name}\" ";
				$html_content .= "title=\"$html_title\" ";
				$html_content .= "data-tipo=\"{$tipo}\" ";
				$html_content .= "data-lang=\"{$lang}\" ";
				$html_content .= "data-section_tipo=\"{$section_tipo}\" ";
				$html_content .= "data-parent=\"{$parent}\" ";
				$html_content .= "data-key_name=\"{$key}\" ";
				$html_content .= "data-context_name=\"$context_name\" ";
				$html_content .= ">$value</textarea>";


				#
				# JSON EDITOR (EXPERIMENTAL)
				$html_content .= "<div id=\"saveDocument\" class=\"saveDocument\">Save</div>";
				$html_content .= "<div id=\"editor_json\" class=\"editor_json\" style=\"\"></div>";
				$html_content .= "<script>
				  $('#$editor_id').hide()
				  var options = {
				    mode: 'code',
				    modes: ['code', 'form', 'text', 'tree', 'view'], // allowed modes
				    error: function (err) {
				      alert('Error [985] ' err.toString());
				    }
				  };
				  // create the editor
				  var container = document.getElementById('editor_json');
				  var editor = new JSONEditor(container,options, $value);
				  // Send JSON text to input and force save
				  document.getElementById('saveDocument').onclick = function () {
				    $('#$editor_id')
				    	.val(editor.getText())
				    	.trigger('change');
				  	};
				</script>";


				foreach ($dato as $key => $part) {
					if($key=='classes') {
						$render =  tool_layout_print::render_css_classes( $part );
						$html_content .= "<pre>".htmlspecialchars($render)."</pre>";
					}
					if($key=='pages') {
						foreach ((array)$part as $current_page) {
							$options = new stdClass();
							    $options->page        = $current_page;
							    $options->record      = false;
							    $options->render_type = 'print';
							$render = tool_layout_print::render_page( $options );
							$html_content .= "<pre style=\"white-space: pre-line;\">".htmlspecialchars($render->html)."</pre>";
						}
					}
				}//end foreach ($dato as $key => $part) {

				#
				# JS Init component
				$html_content .= '<script>';
				# Init component
				$init_options = new stdClass();
					$init_options->component_name 	= $component_name;
					$init_options->wrapper_id 		= $id_wrapper;
				$html_content .= 'component_common.init('.json_encode($init_options).');';
				$html_content .= '</script>';
				break;
	}

	# INIT : Init text editor
	#$html_content .= "<script>component_html_text.init('$identificador_unico','$modo','$propiedades_json');</script>";


	# Prepare content to show in page
	tools::prepare_content($html_content);


	# PRINT HTML
	print $html_label;
	print $html_content;


	print "</div>"; //wrap

	# html_delimiter
	print component_common_draw::html_delimiter($component_name, $tipo, $parent, $label, 'out');


?>