<?php

	# VISUALIZADOR HTML

	# html_delimiter
	print component_common_draw::html_delimiter($component_name, $tipo, $parent, $label, 'in', $modo, $lang);


	print "<div class=\"wrap_component css_wrap_pdf wrap_component_{$tipo}\" ";
	print "id=\"{$id_wrapper}\" ";
	print "data-tipo=\"{$tipo}\" ";
	print "data-lang=\"{$lang}\" ";
	print "data-section_tipo=\"{$section_tipo}\" ";
	print "data-parent=\"{$parent}\" ";
	print "data-modo=\"{$modo}\" ";
	print "data-dato=\"{$valor}\" ";
	print "data-component_name=\"{$component_name}\" ";
	print "data-aditional_path=\"$aditional_path\" ";
	print "data-initial_media_path=\"$initial_media_path\" ";
	print "data-component_info='{$component_info}' ";
	print "data-related_tipo='{$ar_related_component_tipo_json}' ";
	print ">";


		# ETIQUETA (LABEL)
		$html_label = component_common_draw::draw_label($this);

		# CONTENIDO (INPUT)
		$html_content = '';
		switch($permissions) {

			case 0 :
				$html_content .= "";
				break;

			case 1 :
				# pdf THUMB
				if($file_exists) {

					$html_content .= " <div class=\"css_wrap_pdf_thumb\">";
					$html_content .= $pdf_thumb_html ; # Rendered in thumb mode
					$html_content .= " </div>";
				}
				break;

			case 2 :
			case 3 :
				# pdf THUMB
				if($file_exists) {

					$html_content .= "<div class=\"css_wrap_pdf_thumb\" onclick=\"\">";
					/*
					#Embed PDF File
					$html_content .= "<object class=\"pdf_object_thumb\" type=\"application/pdf\"
											data=\"$pdf_url\"?>?#zoom=50&scrollbar=1&toolbar=0&navpanes=0\" id=\"pdf_content\">
											<param name=\"zoom\" value=\"50%\" />
				    						<p>Your browser does not support pdf view.</p>
				    					</object>";
					*/

					$html_content .= $pdf_thumb_html ; # Rendered in thumb mode
					$html_content .= "</div>";

				}else{

					// pdf. File does not exists. Place dedalo PDF with link to default tool
						$open_tool_default='';
						$open_tool_default .="data-pdf_id=\"$pdf_id\" ";
						$open_tool_default .="data-quality=\"".DEDALO_PDF_QUALITY_DEFAULT."\" ";
						$open_tool_default .="data-aditional_path=\"$aditional_path\" ";
						$open_tool_default .="data-initial_media_path=\"$initial_media_path\" ";
						$open_tool_default .="data-tipo=\"$tipo\" ";
						$open_tool_default .="data-parent=\"$parent\" ";
						$open_tool_default .="data-section_tipo=\"$section_tipo\" ";
						$open_tool_default .="onclick=\"tool_common.open_tool_upload(this)\" ";
						$open_tool_default .="title=\"Upload file in original quality\" ";

						$html_content .= "<a class=\"css_wrap_pdf_thumb no_pdf_file\" $open_tool_default tabindex=\"1\">";
						$html_content .= "<span class=\"\">No PDF file is loaded. Click to upload</span>";
						$html_content .= "</a>";

					// original document (word, pages, etc...)
						if (defined('DEDALO_PDF_QUALITY_ORIGINAL')) {
							// return false|string $result as "rsc37_rsc176_2.docx"
							$original = $this->get_original(
								DEDALO_PDF_QUALITY_ORIGINAL,
								true // bool exclude_converted
							);
							// dump($original, ' original ++ '.to_string());
							if (empty($original)) {
								$open_tool = '';
								$open_tool .="data-pdf_id=\"$pdf_id\" ";
								$open_tool .="data-quality=\"".DEDALO_PDF_QUALITY_ORIGINAL."\" ";
								$open_tool .="data-aditional_path=\"$aditional_path\" ";
								$open_tool .="data-initial_media_path=\"$initial_media_path\" ";
								$open_tool .="data-tipo=\"$tipo\" ";
								$open_tool .="data-parent=\"$parent\" ";
								$open_tool .="data-section_tipo=\"$section_tipo\" ";
								$open_tool .="onclick=\"tool_common.open_tool_upload(this)\" ";
								$open_tool .="title=\"Upload file in original quality\" ";

								$html_content .= "<a class=\"css_wrap_pdf_thumb no_document_file\" $open_tool tabindex=\"2\">";
								$html_content .= "<span class=\"\">No original document is loaded. Click to upload</span>";
								$html_content .= "</a>";
							}
						}
				}

				#
				# JS Init component
				$html_content .= '<script>';
				# Init component
				$init_options = new stdClass();
					$init_options->component_name 	= $component_name;
					$init_options->wrapper_id 		= $id_wrapper;
				$html_content .= 'component_common.init('.json_encode($init_options).');';
				$html_content .= '</script>';
				break;

		}

		# Prepare content to show in page
		tools::prepare_content($html_content);


		# PRINT HTML
		print $html_label;
		print $html_content;


	print "</div>"; //wrap


	# html_delimiter
	print component_common_draw::html_delimiter($component_name, $tipo, $parent, $label, 'out', $modo, $lang);


?>