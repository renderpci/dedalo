<?php

	# VISUALIZADOR HTML		
	
	
	# html_delimiter
	print component_common_draw::html_delimiter($component_name, $tipo, $parent, $label, 'in', $modo, $lang);

	print "<div class=\"wrap_component css_wrap_number wrap_component_{$tipo}\" id=\"{$id_wrapper}\" ";
	print "data-tipo=\"{$tipo}\" ";
	print "data-lang=\"{$lang}\" ";
	print "data-section_tipo=\"{$section_tipo}\" ";
	print "data-parent=\"{$parent}\" ";
	print "data-modo=\"{$modo}\" ";
	print "data-dato=\"{$dato}\" ";
	print "data-component_name=\"{$component_name}\" ";
	print "data-component_info='{$component_info}' ";
	print ">";
	
		
		# ETIQUETA (LABEL)
		$html_label = component_common_draw::draw_label($this);
		
		# CONTENIDO (INPUT)
		$html_content = '';
		switch($permissions) {
				
			case 0	:	$html_content .= "";
						break;
							
			case 1	: 	$html_content .= "<span class=\"css_span_dato\">$dato_string</span>";
						break;	
							
			case ($permissions>=2) :	//dump($from_modo, ' from_modo ++ '.to_string());
						
				if($modo !== 'edit_in_list'){
					if($from_modo !== 'edit'){
						$html_content .= "<div class=\"css_number_button_close\" onclick=\"component_common.change_mode_component(this, 'edit', '$from_modo')\"></div>";
					}
				}

				# Read only mode (set in propiedades)
					$read_only = (
						(isset($propiedades->read_only) && ($propiedades->read_only===true || $propiedades->read_only==='read_only')) ||
						(isset($role) && $role==='source_lang')
						)
						? 'readonly="readonly" '
						: '';	
				
				$html_content .= "<input class=\"css_number\" type=\"number\" onchange=\"component_number.Save(this)\" ";
				$html_content .= "name=\"{$input_name}\" ";
				$html_content .= $read_only;
				$html_content .= "data-tipo=\"{$tipo}\" ";
				$html_content .= "data-section_tipo=\"{$section_tipo}\" ";
				$html_content .= "data-parent=\"{$parent}\" ";
				$html_content .= "data-lang=\"{$lang}\" ";
				$html_content .= 'value="'.$dato_string.'" ';
				$html_content .= "title=\"$html_title\" ";
				//$html_content .= "onkeyup=\"component_number.keyup_fix_number_format(this)\" ";
				$html_content .= "/>";
				
				$html_content .= "<span class=\"css_span_log\"></span>";					
				#$html_content .= "<span class=\"css_span_ejemplo\">$ejemplo</span>";						
				
				if(SHOW_DEBUG) {
					$html_content .= "<span class=\"css_span_debugger debug_info\" id=\"debugger_{$tipo}\" >";
					#$html_content .= "{$debugger}";
					$html_content .= "Raw dato: ". var_export($dato,true);
					$html_content .= "</span>";
				}

				#
				# JS Init component
				$html_content .= '<script>';
				# Init component
				$init_options = new stdClass();
					$init_options->component_name 	= $component_name;
					$init_options->wrapper_id 		= $id_wrapper;
				$html_content .= 'component_common.init('.json_encode($init_options).');';
				$html_content .= '</script>';	
				break;									
		}

		# Prepare content to show in page
		tools::prepare_content($html_content);	
		

		# PRINT HTML
		if($modo!=='edit_in_list'){
			print $html_label;
		}
		
		print $html_content;
	
	
	print "</div>"; //wrap

	# html_delimiter
	print component_common_draw::html_delimiter($component_name, $tipo, $parent, $label, 'out', $modo, $lang);


?>